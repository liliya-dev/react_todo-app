{"version":3,"sources":["Todo.js","Shapes.js","App.js","index.js"],"names":["Todo","PropTypes","shape","hideActive","bool","isRequired","hideCompleted","completed","title","string","onComplete","func","selected","deleteTodo","crossed","invisible","style","display","className","checked","type","id","onChange","ev","target","nextElementSibling","textContent","checkExecution","htmlFor","textDecoration","onClick","App","state","inputValue","todoList","visibleFooter","completedTodos","allSelected","clear","tempStatus","finished","filter","todo","unfinished","includes","visibility","length","forEach","setState","newStates","Object","values","every","item","selectAll","prevState","el","previousElementSibling","listWithoutEl","addNewTodo","keyCode","trim","showActive","showAll","obj","key","showCompleted","handleInputChange","persist","value","amountOfCompleted","this","placeholder","onKeyUp","map","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e925a114.chunk.js","sourcesContent":["import React from 'react';\nimport { ShapeTodo } from './Shapes';\n\nexport const Todo = ({\n  selected, hideActive, hideCompleted, completed,\n  title, onComplete, deleteTodo,\n}) => {\n  const checkExecution = (ev) => {\n    (ev.target.checked)\n      ? onComplete(ev.target.nextElementSibling.textContent, true)\n      : onComplete(ev.target.nextElementSibling.textContent, false);\n  };\n\n  const crossed = (selected || completed)\n    ? 'line-through'\n    : 'none';\n  const invisible = ((completed && hideCompleted)\n  || (!completed && hideActive))\n    ? 'none'\n    : 'block';\n\n  return (\n    <li style={{ display: invisible }}>\n      <div className=\"view\">\n        <input\n          checked={completed}\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={title}\n          onChange={ev => checkExecution(ev)}\n        />\n        <label\n          htmlFor={title}\n          style={{ textDecoration: crossed }}\n        >\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={ev => deleteTodo(ev)}\n        />\n      </div>\n    </li>\n  );\n};\n\nTodo.propTypes = ShapeTodo.isRequired;\n","import PropTypes from 'prop-types';\n\nexport const ShapeTodo = PropTypes.shape({\n  hideActive: PropTypes.bool.isRequired,\n  hideCompleted: PropTypes.bool.isRequired,\n  completed: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  onComplete: PropTypes.func.isRequired,\n});\n","import React from 'react';\nimport { Todo } from './Todo';\n\nclass App extends React.Component {\n  state = {\n    inputValue: '',\n    todoList: [],\n    visibleFooter: 'none',\n    completedTodos: {},\n    hideCompleted: false,\n    hideActive: false,\n    allSelected: false,\n    selected: 'all',\n  }\n\n  clear = () => {\n    const tempStatus = { ...this.state.completedTodos };\n    const finished = this.state.todoList\n      .filter(todo => this.state.completedTodos[todo] === true);\n    const unfinished = this.state.todoList\n      .filter(todo => !finished.includes(todo));\n    const visibility = (unfinished.length) ? 'block' : 'none';\n\n    finished.forEach((todo) => {\n      delete tempStatus[todo];\n    });\n    this.setState(() => ({\n      todoList: [...unfinished],\n      completedTodos: { ...tempStatus },\n      visibleFooter: visibility,\n      allSelected: false,\n    }));\n  }\n\n  onComplete = (completed, state) => {\n    const newStates = {\n      ...this.state.completedTodos,\n      [completed]: state,\n    };\n\n    if (Object.values(newStates).every(item => item === true)) {\n      this.selectAll();\n    } else if (this.state.allSelected) {\n      this.setState(() => ({\n        allSelected: false,\n      }));\n    }\n\n    this.setState(prevState => ({\n      completedTodos: {\n        ...prevState.completedTodos,\n        [completed]: state,\n      },\n    }));\n  }\n\n  deleteTodo = (ev) => {\n    const el = ev.target.previousElementSibling.textContent;\n    const listWithoutEl = this.state.todoList.filter(item => item !== el);\n    const visibility = (listWithoutEl.length) ? 'block' : 'none';\n    const completed = { ...this.state.completedTodos };\n\n    delete completed[el];\n\n    this.setState(prevState => ({\n      todoList: [...listWithoutEl],\n      visibleFooter: visibility,\n      allSelected: (!listWithoutEl.length) ? false : prevState.allSelected,\n      completedTodos: { ...completed },\n    }));\n  }\n\n  addNewTodo = (ev) => {\n    if (ev.keyCode === 13\n      && !this.state.todoList.includes(this.state.inputValue)\n      && this.state.inputValue.trim().length) {\n      (this.setState(prevState => ({\n        todoList: (!prevState.todoList.includes(prevState.inputValue))\n          ? [...prevState.todoList, prevState.inputValue]\n          : [...prevState.todoList],\n        inputValue: '',\n        visibleFooter: 'block',\n        completedTodos: {\n          ...prevState.completedTodos,\n          [prevState.inputValue]: false,\n        },\n      })));\n    }\n  };\n\n  showActive = () => {\n    (this.setState(() => ({\n      selected: 'active',\n      hideCompleted: true,\n      hideActive: false,\n    })));\n  }\n\n  showAll = () => {\n    (this.setState(() => ({\n      hideCompleted: false,\n      hideActive: false,\n      selected: 'all',\n    })));\n  }\n\n  selectAll = () => {\n    const obj = {};\n\n    this.state.todoList.forEach((key) => {\n      obj[key] = !this.state.allSelected;\n    });\n\n    this.setState(prevState => ({\n      allSelected: !prevState.allSelected,\n      completedTodos: { ...obj },\n    }));\n  }\n\n  showCompleted = () => {\n    (this.setState(() => ({\n      hideCompleted: false,\n      hideActive: true,\n      selected: 'completed',\n    })));\n  }\n\n  handleInputChange = (ev) => {\n    ev.persist();\n    (this.setState(() => ({\n      inputValue: ev.target.value,\n    })));\n  };\n\n  render() {\n    const amountOfCompleted = Object.values(this.state.completedTodos)\n      .filter(state => state === true).length;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onKeyUp={ev => this.addNewTodo(ev)}\n            onChange={ev => this.handleInputChange(ev)}\n            value={this.state.inputValue}\n          />\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onClick={this.selectAll}\n            checked={this.state.allSelected}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <ul className=\"todo-list\">\n            {\n              this.state.todoList.map(todo => (\n                <Todo\n                  selected={this.state.allSelected}\n                  hideActive={this.state.hideActive}\n                  hideCompleted={this.state.hideCompleted}\n                  key={todo}\n                  completed={this.state.completedTodos[todo]}\n                  title={todo}\n                  onComplete={this.onComplete}\n                  deleteTodo={this.deleteTodo}\n                />\n              ))\n            }\n\n          </ul>\n        </section>\n\n        <footer\n          className=\"footer\"\n          style={{ display: this.state.visibleFooter }}\n        >\n          <span className=\"todo-count\">\n            {this.state.todoList.length - amountOfCompleted}\n            &nbsp;\n            items left\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a\n                href=\"#/\"\n                className={(\n                  this.state.selected === 'all'\n                    ? 'selected'\n                    : 'non-selected'\n                )}\n                onClick={this.showAll}\n              >\n                All\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/active\"\n                className={(\n                  this.state.selected === 'active'\n                    ? 'selected'\n                    : 'non-selected'\n                )}\n                onClick={ev => this.showActive(ev)}\n              >\n                Active\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/completed\"\n                onClick={this.showCompleted}\n                className={(\n                  this.state.selected === 'completed'\n                    ? 'selected'\n                    : 'non-selected'\n                )}\n              >\n                Completed\n              </a>\n            </li>\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={this.clear}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}