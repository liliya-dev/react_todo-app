{"version":3,"sources":["Header.js","Shapes.js","Toggler.js","Todo.js","TodoList.js","Footer.js","App.js","index.js"],"names":["Header","PropTypes","shape","value","string","isRequired","handleInputChange","addTodo","func","allSelected","bool","selectAll","hideActive","hideCompleted","completed","title","onComplete","todoList","arrayOf","transformedTodo","putChanges","startEditing","deleteTodo","completedTodos","objectOf","visibleFooter","selectedButton","showAll","showActive","showCompleted","clear","trimmed","trim","className","placeholder","onKeyUp","ev","keyCode","includes","length","onChange","target","Toggler","type","id","checked","htmlFor","Todo","selected","crossed","invisible","style","display","onDoubleClick","name","nextElementSibling","textContent","textDecoration","onClick","listWithoutEl","filter","item","visibility","completedTasks","handleDelete","previousElementSibling","TodoList","changeTodo","code","i","findIndex","todo","updatedTodoList","splice","state","map","editedTodo","ref","input","focus","onBlur","defaultValue","key","Footer","amountOfCompleted","Object","values","href","tempStatus","finished","unfinished","forEach","App","inputValue","newStates","every","setState","prevState","addNewTodo","valid","obj","action","changedTodo","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.880be955.chunk.js","sourcesContent":["import React from 'react';\nimport { ShapeHeader } from './Shapes';\n\nexport const Header = ({ addTodo, handleInputChange, value, todoList }) => {\n  const trimmed = value.trim();\n  const addNewTodo = (code) => {\n    if (code === 13 && !todoList.includes(trimmed) && trimmed.length) {\n      addTodo(true);\n    }\n  };\n\n  return (\n    (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onKeyUp={ev => addNewTodo(ev.keyCode)}\n          onChange={ev => handleInputChange(ev.target.value)}\n          value={value}\n        />\n      </header>\n    )\n  );\n};\n\nHeader.propTypes = ShapeHeader.isRequired;\n","import PropTypes from 'prop-types';\n\nexport const ShapeHeader = PropTypes.shape({\n  value: PropTypes.string.isRequired,\n  handleInputChange: PropTypes.string.isRequired,\n  addTodo: PropTypes.func.isRequired,\n});\n\nexport const ShapeToggler = PropTypes.shape({\n  allSelected: PropTypes.bool.isRequired,\n  selectAll: PropTypes.func.isRequired,\n});\n\nexport const ShapeTodo = PropTypes.shape({\n  hideActive: PropTypes.bool.isRequired,\n  hideCompleted: PropTypes.bool.isRequired,\n  completed: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  onComplete: PropTypes.func.isRequired,\n});\n\nexport const ShapeTodoList = PropTypes.shape({\n  todoList: PropTypes.arrayOf(PropTypes.string).isRequired,\n  transformedTodo: PropTypes.string.isRequired,\n  putChanges: PropTypes.func.isRequired,\n  startEditing: PropTypes.func.isRequired,\n  onComplete: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  allSelected: PropTypes.bool.isRequired,\n  hideActive: PropTypes.bool.isRequired,\n  hideCompleted: PropTypes.bool.isRequired,\n  completedTodos: PropTypes.objectOf(PropTypes.bool).isRequired,\n});\n\nexport const ShapeFooter = PropTypes.shape({\n  todoList: PropTypes.arrayOf(PropTypes.string).isRequired,\n  visibleFooter: PropTypes.bool.isRequired,\n  selectedButton: PropTypes.string.isRequired,\n  completedTodos: PropTypes.objectOf(PropTypes.bool).isRequired,\n  showAll: PropTypes.func.isRequired,\n  showActive: PropTypes.func.isRequired,\n  showCompleted: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  clear: PropTypes.bool.isRequired,\n});\n","import React from 'react';\nimport { ShapeToggler } from './Shapes';\n\nexport const Toggler = ({ selectAll, allSelected }) => (\n  <>\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      onChange={selectAll}\n      checked={allSelected}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n  </>\n);\n\nToggler.propTypes = ShapeToggler.isRequired;\n","import React from 'react';\nimport { ShapeTodo } from './Shapes';\n\nexport const Todo = ({\n  selected, hideActive, hideCompleted, completed,\n  title, onComplete, deleteTodo, startEditing, todoList, completedTodos,\n}) => {\n  const checkExecution = (checked, name) => {\n    (checked)\n      ? onComplete(name, true)\n      : onComplete(name, false);\n  };\n\n  const handleDelete = (name) => {\n    const listWithoutEl = todoList.filter(item => item !== name);\n    const visibility = !!listWithoutEl.length;\n    const completedTasks = { ...completedTodos };\n\n    delete completedTasks[name];\n\n    deleteTodo(listWithoutEl, visibility, completedTasks);\n  };\n\n  const crossed = (selected || completed)\n    ? 'line-through'\n    : 'none';\n  const invisible = ((completed && hideCompleted)\n  || (!completed && hideActive))\n    ? 'none'\n    : 'block';\n\n  return (\n    <li\n      style={{ display: invisible }}\n      onDoubleClick={() => startEditing(title)}\n    >\n      <div className=\"view\">\n        <input\n          checked={completed}\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={title}\n          onChange={ev => checkExecution(\n            ev.target.checked, ev.target.nextElementSibling.textContent,\n          )}\n        />\n        <label\n          htmlFor={title}\n          style={{ textDecoration: crossed }}\n        >\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={ev => handleDelete(\n            ev.target.previousElementSibling.textContent,\n          )}\n        />\n        <button\n          type=\"button\"\n          className=\"edit_btn\"\n          onClick={() => startEditing(title)}\n          value=\"edit\"\n        />\n      </div>\n    </li>\n  );\n};\n\nTodo.propTypes = ShapeTodo.isRequired;\n","import React from 'react';\nimport { ShapeTodoList } from './Shapes';\nimport { Todo } from './Todo';\n\nexport const TodoList = ({\n  transformedTodo, putChanges, startEditing, allSelected,\n  hideActive, hideCompleted, onComplete, deleteTodo, completedTodos, todoList,\n}) => {\n  const changeTodo = (code, title, value, bool) => {\n    const trimmed = value.trim();\n\n    if (code === 27) {\n      putChanges('cancel');\n    } else if (trimmed === title && (code === 13 || bool)) {\n      putChanges('same');\n    } else if ((code === 13 || bool)\n    && !todoList.includes(trimmed)) {\n      if (!trimmed) {\n        putChanges('ignore');\n      } else if (trimmed) {\n        const i = todoList.findIndex(todo => todo === title);\n        const updatedTodoList = [...todoList];\n\n        updatedTodoList.splice(i, 1, trimmed);\n        const completed = { ...completedTodos };\n        const state = completedTodos[title];\n\n        delete completed[title];\n\n        putChanges('put', updatedTodoList, completed, trimmed, state);\n      }\n    }\n  };\n\n  return (\n    <ul className=\"todo-list\">\n      {\n        todoList.map((todo) => {\n          const editedTodo = (todo === transformedTodo)\n            ? (\n              <input\n                ref={input => input && input.focus()}\n                onKeyUp={ev => changeTodo(ev.keyCode, todo, ev.target.value)}\n                onBlur={ev => changeTodo(\n                  ev.keyCode, todo, ev.target.value, true,\n                )}\n                defaultValue={todo}\n                type=\"text\"\n                className=\"edition\"\n                id={`${todo}_edit`}\n              />\n            )\n            : <></>;\n\n          return (\n            <div className=\"wrap_li\">\n              <Todo\n                startEditing={startEditing}\n                selected={allSelected}\n                hideActive={hideActive}\n                hideCompleted={hideCompleted}\n                key={todo}\n                completed={completedTodos[todo]}\n                title={todo}\n                onComplete={onComplete}\n                deleteTodo={deleteTodo}\n                todoList={todoList}\n                completedTodos={completedTodos}\n              />\n              {editedTodo}\n            </div>\n          );\n        })\n      }\n\n    </ul>\n  );\n};\n\nTodoList.propTypes = ShapeTodoList.isRequired;\n","import React from 'react';\nimport { ShapeFooter } from './Shapes';\n\nexport const Footer = ({ selectedButton,\n  showAll, showActive, showCompleted, clear, completedTodos, todoList }) => {\n  const amountOfCompleted = Object.values(completedTodos)\n    .filter(state => state === true).length;\n\n  const handleClear = () => {\n    const tempStatus = { ...completedTodos };\n    const finished = todoList\n      .filter(todo => completedTodos[todo] === true);\n    const unfinished = todoList\n      .filter(todo => !finished.includes(todo));\n\n    finished.forEach((todo) => {\n      delete tempStatus[todo];\n    });\n    clear(unfinished, tempStatus);\n  };\n\n  return (\n    <section>\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {todoList.length - amountOfCompleted}\n            &nbsp;\n          items left\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a\n              href=\"#/\"\n              className={(\n                selectedButton === 'all' ? 'selected' : 'non-selected'\n              )}\n              onClick={showAll}\n            >\n              All\n            </a>\n          </li>\n\n          <li>\n            <a\n              href=\"#/active\"\n              className={(\n                selectedButton === 'active'\n                  ? 'selected'\n                  : 'non-selected'\n              )}\n              onClick={ev => showActive(ev)}\n            >\n              Active\n            </a>\n          </li>\n\n          <li>\n            <a\n              href=\"#/completed\"\n              onClick={showCompleted}\n              className={(\n                selectedButton === 'completed'\n                  ? 'selected'\n                  : 'non-selected'\n              )}\n            >\n              Completed\n            </a>\n          </li>\n        </ul>\n\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={handleClear}\n        >\n          Clear completed\n        </button>\n      </footer>\n    </section>\n\n  );\n};\n\nFooter.propTypes = ShapeFooter.isRequired;\n","import React from 'react';\nimport { Header } from './Header';\nimport { Toggler } from './Toggler';\nimport { TodoList } from './TodoList';\nimport { Footer } from './Footer';\n\nclass App extends React.Component {\n  state = {\n    inputValue: '',\n    todoList: [],\n    completedTodos: {},\n    hideCompleted: false,\n    hideActive: false,\n    allSelected: false,\n    selected: 'all',\n    transformedTodo: '',\n  }\n\n  onComplete = (completed, state) => {\n    const newStates = {\n      ...this.state.completedTodos,\n      [completed]: state,\n    };\n\n    if (Object.values(newStates).every(item => item === true)) {\n      this.selectAll();\n    } else if (this.state.allSelected) {\n      this.setState(() => ({\n        allSelected: false,\n      }));\n    }\n\n    this.setState(prevState => ({\n      completedTodos: {\n        ...prevState.completedTodos,\n        [completed]: state,\n      },\n    }));\n  }\n\n  deleteTodo = (listWithoutEl, visibility, completed) => {\n    if (Object.values(completed).every(item => item === true)) {\n      this.selectAll();\n    }\n\n    this.setState(prevState => ({\n      todoList: [...listWithoutEl],\n      allSelected: (!listWithoutEl.length) ? false : prevState.allSelected,\n      completedTodos: { ...completed },\n    }));\n  }\n\n  addNewTodo = (valid) => {\n    if (valid) {\n      (this.setState(prevState => ({\n        todoList: (!prevState.todoList.includes(prevState.inputValue.trim()))\n          ? [...prevState.todoList, prevState.inputValue.trim()]\n          : [...prevState.todoList],\n        inputValue: '',\n        completedTodos: {\n          ...prevState.completedTodos,\n          [prevState.inputValue]: false,\n        },\n        allSelected: false,\n      })));\n    }\n  };\n\n  clear = (unfinished, tempStatus) => {\n    this.setState(() => ({\n      todoList: [...unfinished],\n      completedTodos: { ...tempStatus },\n      allSelected: false,\n    }));\n  }\n\n  showActive = () => {\n    (this.setState(() => ({\n      selected: 'active',\n      hideCompleted: true,\n      hideActive: false,\n    })));\n  }\n\n  showAll = () => {\n    (this.setState(() => ({\n      hideCompleted: false,\n      hideActive: false,\n      selected: 'all',\n    })));\n  }\n\n  showCompleted = () => {\n    (this.setState(() => ({\n      hideCompleted: false,\n      hideActive: true,\n      selected: 'completed',\n    })));\n  }\n\n  selectAll = () => {\n    const obj = {};\n\n    this.state.todoList.forEach((key) => {\n      obj[key] = !this.state.allSelected;\n    });\n\n    this.setState(prevState => ({\n      allSelected: !prevState.allSelected,\n      completedTodos: { ...obj },\n    }));\n  }\n\n  handleInputChange = (value) => {\n    (this.setState(() => ({\n      inputValue: value,\n    })));\n  };\n\n  startEditing = (name) => {\n    (this.setState(() => ({\n      transformedTodo: name,\n    })));\n  }\n\n  putChanges = (action, changedTodo, completed, value, state) => {\n    if (action === 'put') {\n      (this.setState(() => ({\n        todoList: [...changedTodo],\n        completedTodos: {\n          ...completed,\n          [value]: state,\n        },\n      })));\n    } else if (action === 'ignore') {\n      (this.setState(prevState => ({\n        todoList: prevState.todoList,\n        transformedTodo: '',\n      })));\n    } else if (action === 'same' || action === 'cancel') {\n      (this.setState(prevState => ({\n        todoList: prevState.todoList,\n        transformedTodo: '',\n        completedTodos: prevState.completedTodos,\n      })));\n    }\n  }\n\n  render() {\n    const { inputValue, todoList, completedTodos, hideCompleted, hideActive,\n      allSelected, selected, transformedTodo } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <Header\n          todoList={todoList}\n          addTodo={this.addNewTodo}\n          handleInputChange={this.handleInputChange}\n          value={inputValue}\n        />\n        <section className=\"main\">\n          <Toggler selectAll={this.selectAll} allSelected={allSelected} />\n          <TodoList\n            todoList={todoList}\n            transformedTodo={transformedTodo}\n            putChanges={this.putChanges}\n            startEditing={this.startEditing}\n            allSelected={allSelected}\n            hideActive={hideActive}\n            hideCompleted={hideCompleted}\n            onComplete={this.onComplete}\n            deleteTodo={this.deleteTodo}\n            completedTodos={completedTodos}\n          />\n        </section>\n        {\n          (todoList.length)\n            ? (\n              <Footer\n                todoList={todoList}\n                completedTodos={completedTodos}\n                selectedButton={selected}\n                showAll={this.showAll}\n                showActive={this.showActive}\n                showCompleted={this.showCompleted}\n                clear={this.clear}\n              />\n            )\n            : <></>\n        }\n\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}